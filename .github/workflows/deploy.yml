name: deploy-book

on:
  # Trigger the workflow on push to main branch
  push:
    branches:
      - main

  pull_request:

  workflow_dispatch:

  schedule:
    # Every day at 4am UTC (10pm Chicago, 5am Geneva)
    - cron: "00 4 * * *"

env:
  BASE_URL: /${{ github.event.repository.name }}

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-book:
    runs-on: ubuntu-latest

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write

    # Required for micromamba to activate
    defaults:
      run:
        shell: "bash -l {0}"

    steps:
      - uses: actions/checkout@v3

      # Install dependencies
      - name: Set up Python via Micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environment.yml
          init-shell: bash
          cache-environment: true
          post-cleanup: "all"

      # Test lesson 1 solutions
      - name: Test lesson 1 solutions
        working-directory: solutions-NO-PEEKING
        run: |
          jupyter nbconvert --to python lesson-1-project-solutions.ipynb
          sed 's/^# \(In\[[0-9]*\]:\)/print("\1") #/' lesson-1-project-solutions.py > lesson-1-project-solutions-RUN.py
          cat -n lesson-1-project-solutions-RUN.py
          python lesson-1-project-solutions-RUN.py

      # Test lesson 2 solutions
      - name: Test lesson 2 solutions
        working-directory: solutions-NO-PEEKING
        run: |
          jupyter nbconvert --to python lesson-2-project-solutions.ipynb
          sed 's/^# \(In\[[0-9]*\]:\)/print("\1") #/' lesson-2-project-solutions.py > lesson-2-project-solutions-RUN.py
          cat -n lesson-2-project-solutions-RUN.py
          python lesson-2-project-solutions-RUN.py

      # Test lesson 3 solutions
      - name: Test lesson 3 solutions
        working-directory: solutions-NO-PEEKING
        run: |
          jupyter nbconvert --to python lesson-3-project-solutions.ipynb
          sed 's/^# \(In\[[0-9]*\]:\)/print("\1") #/' lesson-3-project-solutions.py > lesson-3-project-solutions-RUN.py
          cat -n lesson-3-project-solutions-RUN.py
          python lesson-3-project-solutions-RUN.py

      # Build the book
      - name: Build the book
        run: |
          jupyter-book build array-oriented-programming

      # Upload the book's HTML as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "array-oriented-programming/_build/html"

      # Deploy the book's HTML to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        # only deploy if merging into main, not if testing a PR
        if: github.ref_name == 'main'
        uses: actions/deploy-pages@v2
